// Code generated by MockGen. DO NOT EDIT.
// Source: item_list_handler.go

// Package handler is a generated GoMock package.
package handler

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockItemListHandler is a mock of ItemListHandler interface.
type MockItemListHandler struct {
	ctrl     *gomock.Controller
	recorder *MockItemListHandlerMockRecorder
}

// MockItemListHandlerMockRecorder is the mock recorder for MockItemListHandler.
type MockItemListHandlerMockRecorder struct {
	mock *MockItemListHandler
}

// NewMockItemListHandler creates a new mock instance.
func NewMockItemListHandler(ctrl *gomock.Controller) *MockItemListHandler {
	mock := &MockItemListHandler{ctrl: ctrl}
	mock.recorder = &MockItemListHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItemListHandler) EXPECT() *MockItemListHandlerMockRecorder {
	return m.recorder
}

// Handler mocks base method.
func (m *MockItemListHandler) Handler(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Handler", w, r)
}

// Handler indicates an expected call of Handler.
func (mr *MockItemListHandlerMockRecorder) Handler(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handler", reflect.TypeOf((*MockItemListHandler)(nil).Handler), w, r)
}
